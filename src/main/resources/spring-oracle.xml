<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:property-placeholder location="classpath:config/oracle.properties" ignore-unresolvable="true"/>

    <bean id="db1" class="org.apache.commons.dbcp2.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="url" value="${oracle.db1}"/>
        <property name="username" value="${oracle.username}"/>
        <property name="password" value="${oracle.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${oracle.initialSize}"/>
        <!-- 连接池中同时可以分派的最大活跃连接数 -->
        <property name="maxTotal" value="${oracle.maxTotal}"/>
        <!-- 连接池中最大空闲连接数 -->
        <property name="maxIdle" value="${oracle.maxIdle}"/>
        <!-- 连接池中最小空闲连接数 -->
        <property name="minIdle" value="${oracle.minIdle}"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWaitMillis" value="${oracle.maxWait}"/>
        <!--默认值是 true ，当从连接池取连接时，验证这个连接是否有效-->
        <property name="testOnBorrow" value="${oracle.testOnBorrow}"/>
        <!--程序中的连接不使用后是否被连接池回收-->
        <property name="removeAbandonedOnBorrow" value="true"/>
        <!--程序中的连接超时时间，以秒为单位-->
        <property name="removeAbandonedTimeout" value="30"/>
        <!--SQL查询,用来验证从连接池取出的连接,在将连接返回给调用者之前.如果指定,则查询必须是一个SQL SELECT并且必须返回至少一行记录-->
        <property name="validationQuery" value="${oracle.validationQuery}"/>
        <property name="validationQueryTimeout" value="${oracle.validationQueryTimeout}"/>
        <property name="defaultAutoCommit" value="true"/>
    </bean>


    <bean id="oracleJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="db1"></property>
    </bean>

    <!-- spring使用的管理器 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="db1"/>
    </bean>

    <!--使用注释事务 -->
    <!-- 如果 "proxy-target-class" 属值被设置为 "true"，那么基于类的代理将起作用（这时需要 CGLIB 库cglib.jar在CLASSPATH中） -->
    <!-- 如果 "proxy-target-class" 属值被设置为 "false" 或者这个属性被省略，那么标准的JDK基于接口的代理将起作用  -->
    <tx:annotation-driven proxy-target-class="true" transaction-manager="txManager"/>

</beans>